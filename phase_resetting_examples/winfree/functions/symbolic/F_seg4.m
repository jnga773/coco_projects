function varargout=F_seg4(action,varargin)
%% Automatically generated with matlabFunction
%#ok<*DEFNU,*INUSD,*INUSL>

switch action
  case 'nargs'
   varargout{1}=2;
   return
  case 'nout'
   varargout{1}=2;
   return
  case 'argrange'
   varargout{1}=struct('x',1:2,'p',3:14);
   return
  case 'argsize'
   varargout{1}=struct('x',2,'p',12);
   return
  case 'vector'
   varargout{1}=struct('x',1,'p',1);
   return
  case 'extension'
   varargout{1}='rhs';
   return
  case 'maxorder'
   varargout{1}=2;
   return
end
nout=2;
order=varargin{1};
f=str2func(sprintf('F_seg4_%s_%d',action,order));
varargout=cell(nout,1);
[varargout{:}]=f(varargin{2:end});
end



function [out1,out2] = F_seg4_rhs_0(in1,in2,in3,in4,in5,in6,in7,in8,in9,in10,in11,in12,in13,in14,in15,in16,in17,in18,in19,in20,in21,in22,in23,in24,in25,in26,in27,in28)
%F_seg4_rhs_0
%    [OUT1,OUT2] = F_seg4_rhs_0(IN1,IN2,IN3,IN4,IN5,IN6,IN7,IN8,IN9,IN10,IN11,IN12,IN13,IN14,IN15,IN16,IN17,IN18,IN19,IN20,IN21,IN22,IN23,IN24,IN25,IN26,IN27,IN28)

%    This function was generated by the Symbolic Math Toolbox version 23.2.
%    29-May-2024 11:32:46

t2 = in1.^2;
t3 = in2.^2;
t4 = t2+t3;
t5 = sqrt(t4);
t6 = -t5;
t7 = t5-1.0;
t8 = in3+t6;
out1 = in5.*in6.*(in2-t7.*(in2.*in4-in1.*t8));
if nargout > 1
    out2 = -in5.*in6.*(in1-t7.*(in1.*in4+in2.*t8));
end
end


function [out1,out2] = F_seg4_rhs_1(in1,in2,in3,in4,in5,in6,in7,in8,in9,in10,in11,in12,in13,in14,in15,in16,in17,in18,in19,in20,in21,in22,in23,in24,in25,in26,in27,in28)
%F_seg4_rhs_1
%    [OUT1,OUT2] = F_seg4_rhs_1(IN1,IN2,IN3,IN4,IN5,IN6,IN7,IN8,IN9,IN10,IN11,IN12,IN13,IN14,IN15,IN16,IN17,IN18,IN19,IN20,IN21,IN22,IN23,IN24,IN25,IN26,IN27,IN28)

%    This function was generated by the Symbolic Math Toolbox version 23.2.
%    29-May-2024 11:32:46

t2 = in1.*in4;
t3 = in2.*in4;
t4 = in1.^2;
t5 = in2.^2;
t6 = in1.*in15.*2.0;
t7 = in2.*in16.*2.0;
t8 = t4+t5;
t9 = t6+t7;
t10 = sqrt(t8);
t11 = 1.0./t10;
t12 = -t10;
t13 = t10-1.0;
t14 = in3+t12;
t20 = (t9.*t11)./2.0;
t15 = in1.*t14;
t16 = in2.*t14;
t21 = -t20;
t17 = -t15;
t18 = t2+t16;
t22 = in17+t21;
t19 = t3+t17;
t23 = t13.*t18;
t24 = t13.*t19;
t25 = -t23;
t26 = in1+t25;
t27 = -t24;
t28 = in2+t27;
out1 = in5.*in20.*t28+in6.*in19.*t28-in5.*in6.*(-in16+t13.*(in2.*in18+in4.*in16-in1.*t22-in15.*t14)+t19.*t20);
if nargout > 1
    out2 = -in5.*in20.*t26-in6.*in19.*t26+in5.*in6.*(-in15+t13.*(in1.*in18+in4.*in15+in2.*t22+in16.*t14)+t18.*t20);
end
end


function [out1,out2] = F_seg4_rhs_2(in1,in2,in3,in4,in5,in6,in7,in8,in9,in10,in11,in12,in13,in14,in15,in16,in17,in18,in19,in20,in21,in22,in23,in24,in25,in26,in27,in28)
%F_seg4_rhs_2
%    [OUT1,OUT2] = F_seg4_rhs_2(IN1,IN2,IN3,IN4,IN5,IN6,IN7,IN8,IN9,IN10,IN11,IN12,IN13,IN14,IN15,IN16,IN17,IN18,IN19,IN20,IN21,IN22,IN23,IN24,IN25,IN26,IN27,IN28)

%    This function was generated by the Symbolic Math Toolbox version 23.2.
%    29-May-2024 11:32:47

t2 = in1.*in4;
t3 = in2.*in4;
t4 = in1.*in18;
t5 = in4.*in15;
t6 = in2.*in18;
t7 = in4.*in16;
t8 = in1.^2;
t9 = in2.^2;
t10 = in15.^2;
t11 = in16.^2;
t12 = in1.*in15.*2.0;
t13 = in2.*in16.*2.0;
t14 = -in15;
t15 = t10.*2.0;
t16 = t11.*2.0;
t19 = t8+t9;
t20 = t12+t13;
t21 = t20.^2;
t22 = sqrt(t19);
t23 = t15+t16;
t24 = 1.0./t22;
t26 = -t22;
t27 = t22-1.0;
t25 = t24.^3;
t28 = in3+t26;
t36 = (t20.*t24)./2.0;
t38 = (t23.*t24)./2.0;
t29 = in1.*t28;
t30 = in2.*t28;
t32 = in16.*t28;
t37 = -t36;
t39 = (t21.*t25)./4.0;
t33 = -t29;
t34 = t2+t30;
t40 = in17+t37;
t41 = -t39;
t35 = t3+t33;
t42 = in1.*t40;
t43 = in2.*t40;
t44 = t34.*t36;
t48 = t38+t41;
t45 = t35.*t36;
out1 = in5.*in20.*(-in16+t45+t27.*(t6+t7-t42+t14.*t28)).*-2.0-in6.*in19.*(-in16+t45+t27.*(t6+t7-t42+t14.*t28)).*2.0+in19.*in20.*(in2-t27.*t35).*2.0-in5.*in6.*(t27.*(in16.*in18.*2.0+in1.*t48-in15.*t40.*2.0)+t20.*t24.*(t6+t7-t42+t14.*t28)-(t21.*t25.*t35)./4.0+(t23.*t24.*t35)./2.0);
if nargout > 1
    t47 = t4+t5+t32+t43;
    t50 = t27.*t47;
    t52 = t14+t44+t50;
    out2 = in5.*in6.*(t34.*t38+t27.*(in15.*in18.*2.0-in2.*t48+in16.*t40.*2.0)-(t21.*t25.*t34)./4.0+t20.*t24.*t47)-in19.*in20.*(in1-t27.*t34).*2.0+in5.*in20.*t52.*2.0+in6.*in19.*t52.*2.0;
end
end

