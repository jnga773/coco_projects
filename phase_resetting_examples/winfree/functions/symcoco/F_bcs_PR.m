function varargout=F_bcs_PR(action,varargin)
%% Automatically generated with matlabFunction
%#ok<*DEFNU,*INUSD,*INUSL>

switch action
  case 'nargs'
   varargout{1}=1;
   return
  case 'nout'
   varargout{1}=16;
   return
  case 'argrange'
   varargout{1}=struct('u',1:34);
   return
  case 'argsize'
   varargout{1}=struct('u',34);
   return
  case 'vector'
   varargout{1}=struct('u',1);
   return
  case 'extension'
   varargout{1}='rhs';
   return
  case 'maxorder'
   varargout{1}=2;
   return
end
nout=16;
order=varargin{1};
f=str2func(sprintf('F_bcs_PR_%s_%d',action,order));
varargout=cell(nout,1);
[varargout{:}]=f(varargin{2:end});
end



function [out1,out2,out3,out4,out5,out6,out7,out8,out9,out10,out11,out12,out13,out14,out15,out16] = F_bcs_PR_rhs_0(in1,in2,in3,in4,in5,in6,in7,in8,in9,in10,in11,in12,in13,in14,in15,in16,in17,in18,in19,in20,in21,in22,in23,in24,in25,in26,in27,in28,in29,in30,in31,in32,in33,in34,in35,in36,in37,in38,in39,in40,in41,in42,in43,in44,in45,in46,in47,in48,in49,in50,in51,in52,in53,in54,in55,in56,in57,in58,in59,in60,in61,in62,in63,in64,in65,in66,in67,in68)
%F_bcs_PR_rhs_0
%    [OUT1,OUT2,OUT3,OUT4,OUT5,OUT6,OUT7,OUT8,OUT9,OUT10,OUT11,OUT12,OUT13,OUT14,OUT15,OUT16] = F_bcs_PR_rhs_0(IN1,IN2,IN3,IN4,IN5,IN6,IN7,IN8,IN9,IN10,IN11,IN12,IN13,IN14,IN15,IN16,IN17,IN18,IN19,IN20,IN21,IN22,IN23,IN24,IN25,IN26,IN27,IN28,IN29,IN30,IN31,IN32,IN33,IN34,IN35,IN36,IN37,IN38,IN39,IN40,IN41,IN42,IN43,IN44,IN45,IN46,IN47,IN48,IN49,IN50,IN51,IN52,IN53,IN54,IN55,IN56,IN57,IN58,IN59,IN60,IN61,IN62,IN63,IN64,IN65,IN66,IN67,IN68)

%    This function was generated by the Symbolic Math Toolbox version 25.1.
%    14-Oct-2025 14:55:49

out1 = in1-in17;
if nargout > 1
    out2 = in2-in18;
end
if nargout > 2
    out3 = in5-in13;
end
if nargout > 3
    out4 = in6-in14;
end
if nargout > 4
    t2 = in1.^2;
    t3 = in2.^2;
    t4 = in34.*pi.*2.0;
    t5 = t2+t3;
    t6 = sqrt(t5);
    out5 = in2-(t6-1.0).*(in2.*in26-in1.*(in25-t6));
end
if nargout > 5
    out6 = -in7+in15;
end
if nargout > 6
    out7 = -in8+in16;
end
if nargout > 7
    out8 = -in19+in3.*in31;
end
if nargout > 8
    out9 = -in20+in4.*in31;
end
if nargout > 9
    out10 = sqrt(abs(in19).^2+abs(in20).^2)-1.0;
end
if nargout > 10
    out11 = -in1+in21;
end
if nargout > 11
    out12 = -in2+in22;
end
if nargout > 12
    out13 = -in9+in11-in33.*cos(t4);
end
if nargout > 13
    out14 = -in10+in12-in33.*sin(t4);
end
if nargout > 14
    out15 = -in7.*(conj(in5)-conj(in23))-in8.*(conj(in6)-conj(in24));
end
if nargout > 15
    out16 = -in32+(in5-in23).^2+(in6-in24).^2;
end
end


function [out1,out2,out3,out4,out5,out6,out7,out8,out9,out10,out11,out12,out13,out14,out15,out16] = F_bcs_PR_rhs_1(in1,in2,in3,in4,in5,in6,in7,in8,in9,in10,in11,in12,in13,in14,in15,in16,in17,in18,in19,in20,in21,in22,in23,in24,in25,in26,in27,in28,in29,in30,in31,in32,in33,in34,in35,in36,in37,in38,in39,in40,in41,in42,in43,in44,in45,in46,in47,in48,in49,in50,in51,in52,in53,in54,in55,in56,in57,in58,in59,in60,in61,in62,in63,in64,in65,in66,in67,in68)
%F_bcs_PR_rhs_1
%    [OUT1,OUT2,OUT3,OUT4,OUT5,OUT6,OUT7,OUT8,OUT9,OUT10,OUT11,OUT12,OUT13,OUT14,OUT15,OUT16] = F_bcs_PR_rhs_1(IN1,IN2,IN3,IN4,IN5,IN6,IN7,IN8,IN9,IN10,IN11,IN12,IN13,IN14,IN15,IN16,IN17,IN18,IN19,IN20,IN21,IN22,IN23,IN24,IN25,IN26,IN27,IN28,IN29,IN30,IN31,IN32,IN33,IN34,IN35,IN36,IN37,IN38,IN39,IN40,IN41,IN42,IN43,IN44,IN45,IN46,IN47,IN48,IN49,IN50,IN51,IN52,IN53,IN54,IN55,IN56,IN57,IN58,IN59,IN60,IN61,IN62,IN63,IN64,IN65,IN66,IN67,IN68)

%    This function was generated by the Symbolic Math Toolbox version 25.1.
%    14-Oct-2025 14:55:49

out1 = in35-in51;
if nargout > 1
    out2 = in36-in52;
end
if nargout > 2
    out3 = in39-in47;
end
if nargout > 3
    out4 = in40-in48;
end
if nargout > 4
    t2 = abs(in19);
    t3 = abs(in20);
    t4 = conj(in19);
    t5 = conj(in20);
    t6 = in1.^2;
    t7 = in2.^2;
    t8 = in34.*pi.*2.0;
    t9 = in1.*in35.*2.0;
    t10 = in2.*in36.*2.0;
    t11 = cos(t8);
    t12 = sin(t8);
    t13 = t6+t7;
    t14 = t9+t10;
    t15 = sqrt(t13);
    t16 = 1.0./t15;
    t17 = -t15;
    t18 = in25+t17;
    out5 = in36-(t15-1.0).*(in2.*in60+in26.*in36-in35.*t18-in1.*(in59-(t14.*t16)./2.0))-(t14.*t16.*(in2.*in26-in1.*t18))./2.0;
end
if nargout > 5
    out6 = -in41+in49;
end
if nargout > 6
    out7 = -in42+in50;
end
if nargout > 7
    out8 = -in53+in3.*in65+in31.*in37;
end
if nargout > 8
    out9 = -in54+in4.*in65+in31.*in38;
end
if nargout > 9
    out10 = (1.0./sqrt(t2.^2+t3.^2).*(t2.*(in53.*t4+in19.*conj(in53)).*1.0./sqrt(in19.*t4)+t3.*(in54.*t5+in20.*conj(in54)).*1.0./sqrt(in20.*t5)))./2.0;
end
if nargout > 10
    out11 = -in35+in55;
end
if nargout > 11
    out12 = -in36+in56;
end
if nargout > 12
    out13 = -in43+in45-in67.*t11+in33.*in68.*t12.*pi.*2.0;
end
if nargout > 13
    out14 = -in44+in46-in67.*t12-in33.*in68.*t11.*pi.*2.0;
end
if nargout > 14
    out15 = -in41.*(conj(in5)-conj(in23))-in42.*(conj(in6)-conj(in24))-in7.*(conj(in39)-conj(in57))-in8.*(conj(in40)-conj(in58));
end
if nargout > 15
    out16 = -in66+(in5-in23).*(in39-in57).*2.0+(in6-in24).*(in40-in58).*2.0;
end
end


function [out1,out2,out3,out4,out5,out6,out7,out8,out9,out10,out11,out12,out13,out14,out15,out16] = F_bcs_PR_rhs_2(in1,in2,in3,in4,in5,in6,in7,in8,in9,in10,in11,in12,in13,in14,in15,in16,in17,in18,in19,in20,in21,in22,in23,in24,in25,in26,in27,in28,in29,in30,in31,in32,in33,in34,in35,in36,in37,in38,in39,in40,in41,in42,in43,in44,in45,in46,in47,in48,in49,in50,in51,in52,in53,in54,in55,in56,in57,in58,in59,in60,in61,in62,in63,in64,in65,in66,in67,in68)
%F_bcs_PR_rhs_2
%    [OUT1,OUT2,OUT3,OUT4,OUT5,OUT6,OUT7,OUT8,OUT9,OUT10,OUT11,OUT12,OUT13,OUT14,OUT15,OUT16] = F_bcs_PR_rhs_2(IN1,IN2,IN3,IN4,IN5,IN6,IN7,IN8,IN9,IN10,IN11,IN12,IN13,IN14,IN15,IN16,IN17,IN18,IN19,IN20,IN21,IN22,IN23,IN24,IN25,IN26,IN27,IN28,IN29,IN30,IN31,IN32,IN33,IN34,IN35,IN36,IN37,IN38,IN39,IN40,IN41,IN42,IN43,IN44,IN45,IN46,IN47,IN48,IN49,IN50,IN51,IN52,IN53,IN54,IN55,IN56,IN57,IN58,IN59,IN60,IN61,IN62,IN63,IN64,IN65,IN66,IN67,IN68)

%    This function was generated by the Symbolic Math Toolbox version 25.1.
%    14-Oct-2025 14:55:50

out1 = 0.0;
if nargout > 1
    out2 = 0.0;
end
if nargout > 2
    out3 = 0.0;
end
if nargout > 3
    out4 = 0.0;
end
if nargout > 4
    t2 = abs(in19);
    t3 = abs(in20);
    t4 = conj(in19);
    t5 = conj(in20);
    t6 = conj(in53);
    t7 = conj(in54);
    t8 = in2.*in26;
    t9 = pi.^2;
    t10 = in1.^2;
    t11 = in2.^2;
    t12 = in35.^2;
    t13 = in36.^2;
    t14 = in68.^2;
    t15 = in34.*pi.*2.0;
    t18 = in1.*in35.*2.0;
    t19 = in2.*in36.*2.0;
    t16 = t2.^2;
    t17 = t3.^2;
    t20 = in19.*t4;
    t21 = in20.*t5;
    t22 = in19.*t6;
    t23 = in53.*t4;
    t24 = in20.*t7;
    t25 = in54.*t5;
    t26 = t12.*2.0;
    t27 = t13.*2.0;
    t28 = cos(t15);
    t29 = sin(t15);
    t30 = t10+t11;
    t34 = t18+t19;
    t31 = t22+t23;
    t32 = t24+t25;
    t33 = t16+t17;
    t35 = 1.0./sqrt(t20);
    t36 = 1.0./sqrt(t21);
    t37 = t34.^2;
    t38 = sqrt(t30);
    t39 = t26+t27;
    t40 = t31.^2;
    t41 = t32.^2;
    t42 = 1.0./t38;
    t44 = -t38;
    t43 = t42.^3;
    t45 = in25+t44;
    t49 = (t34.*t42)./2.0;
    t46 = in1.*t45;
    t50 = -t49;
    t47 = -t46;
    t51 = in59+t50;
    t48 = t8+t47;
    out5 = (t38-1.0).*(in36.*in60.*-2.0+in35.*t51.*2.0+in1.*((t37.*t43)./4.0-(t39.*t42)./2.0))-t34.*t42.*(in2.*in60+in26.*in36-in1.*t51-in35.*t45)+(t37.*t43.*t48)./4.0-(t39.*t42.*t48)./2.0;
end
if nargout > 5
    out6 = 0.0;
end
if nargout > 6
    out7 = 0.0;
end
if nargout > 7
    out8 = in37.*in65.*2.0;
end
if nargout > 8
    out9 = in38.*in65.*2.0;
end
if nargout > 9
    out10 = (1.0./sqrt(t33).*((t35.^2.*t40)./2.0+(t36.^2.*t41)./2.0-(t2.*t35.^3.*t40)./2.0-(t3.*t36.^3.*t41)./2.0+in53.*t2.*t6.*t35.*2.0+in54.*t3.*t7.*t36.*2.0))./2.0-(1.0./t33.^(3.0./2.0).*(t2.*t31.*t35+t3.*t32.*t36).^2)./4.0;
end
if nargout > 10
    out11 = 0.0;
end
if nargout > 11
    out12 = 0.0;
end
if nargout > 12
    out13 = in33.*t9.*t14.*t28.*4.0+in67.*in68.*t29.*pi.*4.0;
end
if nargout > 13
    out14 = in33.*t9.*t14.*t29.*4.0-in67.*in68.*t28.*pi.*4.0;
end
if nargout > 14
    out15 = in41.*(conj(in39)-conj(in57)).*-2.0-in42.*(conj(in40)-conj(in58)).*2.0;
end
if nargout > 15
    out16 = (in39-in57).^2.*2.0+(in40-in58).^2.*2.0;
end
end

