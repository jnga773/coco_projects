function varargout=F_winfree(action,varargin)
%% Automatically generated with matlabFunction
%#ok<*DEFNU,*INUSD,*INUSL>

switch action
  case 'nargs'
   varargout{1}=2;
   return
  case 'nout'
   varargout{1}=2;
   return
  case 'argrange'
   varargout{1}=struct('x',1:2,'p',3:4);
   return
  case 'argsize'
   varargout{1}=struct('x',2,'p',2);
   return
  case 'vector'
   varargout{1}=struct('x',1,'p',1);
   return
  case 'extension'
   varargout{1}='rhs';
   return
  case 'maxorder'
   varargout{1}=2;
   return
end
nout=2;
order=varargin{1};
f=str2func(sprintf('F_winfree_%s_%d',action,order));
varargout=cell(nout,1);
[varargout{:}]=f(varargin{2:end});
end



function [out1,out2] = F_winfree_rhs_0(in1,in2,in3,in4,in5,in6,in7,in8)
%F_winfree_rhs_0
%    [OUT1,OUT2] = F_winfree_rhs_0(IN1,IN2,IN3,IN4,IN5,IN6,IN7,IN8)

%    This function was generated by the Symbolic Math Toolbox version 25.1.
%    13-Aug-2025 15:42:13

t2 = in1.^2;
t3 = in2.^2;
t4 = t2+t3;
t5 = sqrt(t4);
t6 = -t5;
t7 = t5-1.0;
t8 = in3+t6;
out1 = in2-t7.*(in2.*in4-in1.*t8);
if nargout > 1
    out2 = -in1+t7.*(in1.*in4+in2.*t8);
end
end


function [out1,out2] = F_winfree_rhs_1(in1,in2,in3,in4,in5,in6,in7,in8)
%F_winfree_rhs_1
%    [OUT1,OUT2] = F_winfree_rhs_1(IN1,IN2,IN3,IN4,IN5,IN6,IN7,IN8)

%    This function was generated by the Symbolic Math Toolbox version 25.1.
%    13-Aug-2025 15:42:14

t2 = in1.^2;
t3 = in2.^2;
t4 = in1.*in5.*2.0;
t5 = in2.*in6.*2.0;
t6 = t2+t3;
t7 = t4+t5;
t8 = sqrt(t6);
t9 = 1.0./t8;
t10 = -t8;
t11 = t8-1.0;
t12 = in3+t10;
t13 = (t7.*t9)./2.0;
t14 = -t13;
t15 = in7+t14;
out1 = in6-t11.*(in2.*in8+in4.*in6-in1.*t15-in5.*t12)-(t7.*t9.*(in2.*in4-in1.*t12))./2.0;
if nargout > 1
    out2 = -in5+t11.*(in1.*in8+in4.*in5+in2.*t15+in6.*t12)+t13.*(in1.*in4+in2.*t12);
end
end


function [out1,out2] = F_winfree_rhs_2(in1,in2,in3,in4,in5,in6,in7,in8)
%F_winfree_rhs_2
%    [OUT1,OUT2] = F_winfree_rhs_2(IN1,IN2,IN3,IN4,IN5,IN6,IN7,IN8)

%    This function was generated by the Symbolic Math Toolbox version 25.1.
%    13-Aug-2025 15:42:14

t2 = in1.*in4;
t3 = in2.*in4;
t4 = in1.^2;
t5 = in2.^2;
t6 = in5.^2;
t7 = in6.^2;
t8 = in1.*in5.*2.0;
t9 = in2.*in6.*2.0;
t10 = t6.*2.0;
t11 = t7.*2.0;
t12 = t4+t5;
t13 = t8+t9;
t14 = t13.^2;
t15 = sqrt(t12);
t16 = t10+t11;
t17 = 1.0./t15;
t19 = -t15;
t20 = t15-1.0;
t18 = t17.^3;
t21 = in3+t19;
t27 = (t13.*t17)./2.0;
t29 = (t16.*t17)./2.0;
t22 = in1.*t21;
t23 = in2.*t21;
t28 = -t27;
t30 = (t14.*t18)./4.0;
t24 = -t22;
t25 = t2+t23;
t31 = in7+t28;
t32 = -t30;
t26 = t3+t24;
t33 = t29+t32;
out1 = t26.*t30-t20.*(in6.*in8.*2.0+in1.*t33-in5.*t31.*2.0)-t13.*t17.*(in2.*in8+in4.*in6-in5.*t21-in1.*t31)-(t16.*t17.*t26)./2.0;
if nargout > 1
    out2 = t25.*t29+t20.*(in5.*in8.*2.0-in2.*t33+in6.*t31.*2.0)+t13.*t17.*(in1.*in8+in4.*in5+in6.*t21+in2.*t31)-(t14.*t18.*t25)./4.0;
end
end

